(()=>{"use strict";var n={254:(n,e,t)=>{t.d(e,{A:()=>d});var i=t(354),r=t.n(i),a=t(314),o=t.n(a)()(r());o.push([n.id,'*{\n margin: 0;\n padding: 0;\n box-sizing: border-box;\n}\n\nhtml,\nbody{\n    height: 100%;\n    width: 100%;\n    background-color: black;\n    position: relative;\n    \n}\n\n.game-title {\n    font-size: 40px;\n    font-family: Arial, Helvetica, sans-serif;\n    font-weight: 900;\n    color: white;\n}\n\n.start-menu {\n    \n    \n    \n    display: none\n\n\n}\n\n\n\n.show-start-menu {\n\n    display: grid;\n    grid-template-rows: 300px 80px 200px;position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    z-index: 2;\n\n\n    \n}\n\n.player-title-div {\n    display: grid;\n    align-items: end;\n    justify-items: center;\n}\n\n.player-type-title{\n    color: white;\n    text-align: center;\n    font-size: 30px;\n    font-family: serif;\n    font-weight: 900;\n    /* vertical-align: middle; */\n}\n.player-type-div {\n    display: grid;\n\n    grid-template-columns: 1fr 1fr;\n    justify-items: center;\n    align-items: end;\n    gap: 30px;\n}\n\n.player-type-div > button {\n    width: 130px;\n    height: 40px;\n}\n\n.computer-option {\n    justify-self: end;\n}\n\n.real-player-option {\n    justify-self: start;\n}\n\n.start-button-div {\n    display: grid;\n    justify-items: center;\n    align-items: center;\n}\n\n.start-button {\n    width: 150px;\n    height: 50px;\n}\n\n\n.pass-device{\n    border: 3px solid pink;\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: gray;\n    \n    padding: 20%;\n    z-index: 2;\n    \n    display: none;\n}\n\n.show-pass-device{\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* grid-template-rows: 170px 200px; */\n    gap: 20px;\n}\n\n\n.pass-device-message {\n    border: 3px solid red;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n\n\n    text-align: center;\n    vertical-align: middle;\n    padding: 50px;\n    font-size: 40px;\n    /* line-height: 100%; */\n}\n\n.pass-device-button {\n    border: 3px solid blue;\n    width: 200px;\n    height: 70px;\n    font-size: 25px;\n    border-radius: 15px;\n    align-self: start;\n}\n\n.main-container {\n\n    /* Have a minimum height and width for .player-div */\n\n    width: 100%;\n    height: 100%;\n    border: 2px solid red;\n    display: grid;\n    grid-template-rows: 100px 1fr 50px;\n}\n\n.top-div {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    justify-items: center;\n    align-items: center;\n}\n\n.header-div {\n    width: 100%;\n\n    border: 2px solid blue;\n    color: white;\n    text-align: center;\n    font-size: 20px;\n\n    /* padding: 30px; */\n}\n\n.restart-button {\n    width: 130px;\n    height: 40px;\n    border-radius: 10px;\n}\n\n\n\n\n.player-div {\n    width: 100%;\n    height: 100%;\n    border: 2px solid pink;\n    /* background-color: yellow; */\n    display: grid;\n    /* grid-template-columns: repeat(auto-fit, minmax(380px, 1fr)); */\n    grid-template-columns: repeat(2,1fr);\n    position: relative;;\n\n}\n\n.game-over{\n    position: fixed;\n    display: none;\n}\n\n.enable-game-over{\n    width: 100%;\n    height: 100%;\n    display: block;\n}\n/* Do I need z-index here? - Check if the link is still clickable if z-index is 0 after game is over */\n.footer-div {\n    width: 100%;\n    height: 100%;\n    border: 2px solid green;\n    z-index: 1; \n    color: white;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n}\n\n.footer-link:hover{\n    color: white;\n}\n\n.player1-div,\n.player2-div{\n\n    gap: 15px;\n    display: grid;\n    padding: 10px;\n    grid-template-rows: 1fr 100px;\n\n}\n\n\n.player1-div {\n    width: 100%;\n    height: 100%;\n    border: 2px solid lightgreen;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* text-align: center; */\n    /* color: white; */\n}\n\n.player2-div {\n    width: 100%;\n    height: 100%;\n    border: 2px solid lightgoldenrodyellow;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* text-align: center; */\n    /* color: white; */\n}\n\n\n.grid-container-one,\n.grid-container-two{\n    display: grid;\n    width: span;\n    height: span;\n    grid-template-rows: 50px max(280px, 30vw);\n    grid-template-columns: 50px max(280px, 30vw);\n    border: 3px solid fuchsia;\n    border-radius: 15px;\n    background-color: rgba(0, 0, 0, 0.377);\n    padding: 10px;\n}\n\n.grid-container-one{\n    grid-template-areas: \n    ". x-axis"\n    "y-axis player1Grid";\n}\n\n.grid-container-two{\n    grid-template-areas: \n    ". x-axis"\n    "y-axis player2Grid";\n}\n\n.x-axis{\n    display: grid;\n    grid-area: x-axis;\n    color: white;\n    grid-auto-flow: column;\n    grid-template-columns: repeat(10, 1fr);\n}\n\n.x-axis > div {\n    /* text-align: center; */\n    font-size: 20px;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n}\n\n.y-axis{\n\n    display: grid;\n    grid-area: y-axis;\n    color: white;\n    font-size: 10px;\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.y-axis > div {\n    /* text-align: center; */\n    font-size: 20px;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n}\n\n\n.player1-grid,\n.player2-grid{\n\n    --height-and-width: max(280px, 30vw);\n    --border-size: 2px solid greenyellow;\n\n    border: var(--border-size);\n    width: var(--height-and-width);\n    height: var(--height-and-width);\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    color: white;\n\n}\n\n.player1-grid{\n    grid-area: player1Grid;\n}\n\n.player2-grid{\n    grid-area: player2Grid;\n}\n\n.player1-label,\n.player2-label{\n    color: white;\n    width: 150px;\n    border: 2px solid blanchedalmond;\n    text-align: center;\n    /* padding: 10px; */\n    font-size: 20px;\n    height: 60px;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    border-radius: 15px;\n}\n\n.show-turn{\n    background-color: greenyellow;\n}\n\n.grid-column{\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    /* border: 2px solid turquoise; */\n    text-align: center;\n}\n\n.grid-row{\n\n    border: 2px solid turquoise;\n    \n}\n.grid-row:hover{\n    /* background-color: rgba(255, 255, 0, 0.156); */\n    border: 3px solid yellow;\n}\n\n.clicked {\n    background-color: red;\n}\n\n.ship-located {\n    background-color: darkorchid;\n}\n\n\n.ship-is-hit{\n    background-color: darkred;\n}\n\n.attack-missed{\n    background-color: white;\n}\n@media (max-width: 770px){\n    /* change player font position */\n\n    .player-div{\n        grid-template-columns: 1fr;\n        grid-template-rows: repeat(2, 1fr);\n    }\n\n    .player1-div,\n    .player2-div{\n        padding: 20px 5px 20px 5px;\n    }\n\n    .player2-div {\n        grid-template-rows: 100px 1fr;\n    }\n\n\n\n    .grid-container-one,\n    .grid-container-two{\n        width: span;\n        height: span;\n        grid-template-rows: 20px 280px;\n        grid-template-columns: 20px 280px;\n        padding: 10px;\n    }\n\n    .x-axis > div,\n    .y-axis > div{\n        font-size: 12px;\n    }\n\n\n    .player1-grid,\n    .player2-grid{\n        \n        /* Might have to reduce size further */\n        width: 280px;\n        height: 280px;\n\n    }\n    .player1-div{\n        order: 2;\n    }\n    .player2-div{\n        order: 1;\n    }\n\n    .grid-container-two{\n        order: 2;\n    }\n\n    .player2-label{\n        order: 1;\n    }\n\n}',"",{version:3,sources:["webpack://./src/assets/style.css"],names:[],mappings:"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",sourcesContent:['*{\n margin: 0;\n padding: 0;\n box-sizing: border-box;\n}\n\nhtml,\nbody{\n    height: 100%;\n    width: 100%;\n    background-color: black;\n    position: relative;\n    \n}\n\n.game-title {\n    font-size: 40px;\n    font-family: Arial, Helvetica, sans-serif;\n    font-weight: 900;\n    color: white;\n}\n\n.start-menu {\n    \n    \n    \n    display: none\n\n\n}\n\n\n\n.show-start-menu {\n\n    display: grid;\n    grid-template-rows: 300px 80px 200px;position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    z-index: 2;\n\n\n    \n}\n\n.player-title-div {\n    display: grid;\n    align-items: end;\n    justify-items: center;\n}\n\n.player-type-title{\n    color: white;\n    text-align: center;\n    font-size: 30px;\n    font-family: serif;\n    font-weight: 900;\n    /* vertical-align: middle; */\n}\n.player-type-div {\n    display: grid;\n\n    grid-template-columns: 1fr 1fr;\n    justify-items: center;\n    align-items: end;\n    gap: 30px;\n}\n\n.player-type-div > button {\n    width: 130px;\n    height: 40px;\n}\n\n.computer-option {\n    justify-self: end;\n}\n\n.real-player-option {\n    justify-self: start;\n}\n\n.start-button-div {\n    display: grid;\n    justify-items: center;\n    align-items: center;\n}\n\n.start-button {\n    width: 150px;\n    height: 50px;\n}\n\n\n.pass-device{\n    border: 3px solid pink;\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: gray;\n    \n    padding: 20%;\n    z-index: 2;\n    \n    display: none;\n}\n\n.show-pass-device{\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* grid-template-rows: 170px 200px; */\n    gap: 20px;\n}\n\n\n.pass-device-message {\n    border: 3px solid red;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n\n\n    text-align: center;\n    vertical-align: middle;\n    padding: 50px;\n    font-size: 40px;\n    /* line-height: 100%; */\n}\n\n.pass-device-button {\n    border: 3px solid blue;\n    width: 200px;\n    height: 70px;\n    font-size: 25px;\n    border-radius: 15px;\n    align-self: start;\n}\n\n.main-container {\n\n    /* Have a minimum height and width for .player-div */\n\n    width: 100%;\n    height: 100%;\n    border: 2px solid red;\n    display: grid;\n    grid-template-rows: 100px 1fr 50px;\n}\n\n.top-div {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    justify-items: center;\n    align-items: center;\n}\n\n.header-div {\n    width: 100%;\n\n    border: 2px solid blue;\n    color: white;\n    text-align: center;\n    font-size: 20px;\n\n    /* padding: 30px; */\n}\n\n.restart-button {\n    width: 130px;\n    height: 40px;\n    border-radius: 10px;\n}\n\n\n\n\n.player-div {\n    width: 100%;\n    height: 100%;\n    border: 2px solid pink;\n    /* background-color: yellow; */\n    display: grid;\n    /* grid-template-columns: repeat(auto-fit, minmax(380px, 1fr)); */\n    grid-template-columns: repeat(2,1fr);\n    position: relative;;\n\n}\n\n.game-over{\n    position: fixed;\n    display: none;\n}\n\n.enable-game-over{\n    width: 100%;\n    height: 100%;\n    display: block;\n}\n/* Do I need z-index here? - Check if the link is still clickable if z-index is 0 after game is over */\n.footer-div {\n    width: 100%;\n    height: 100%;\n    border: 2px solid green;\n    z-index: 1; \n    color: white;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n}\n\n.footer-link:hover{\n    color: white;\n}\n\n.player1-div,\n.player2-div{\n\n    gap: 15px;\n    display: grid;\n    padding: 10px;\n    grid-template-rows: 1fr 100px;\n\n}\n\n\n.player1-div {\n    width: 100%;\n    height: 100%;\n    border: 2px solid lightgreen;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* text-align: center; */\n    /* color: white; */\n}\n\n.player2-div {\n    width: 100%;\n    height: 100%;\n    border: 2px solid lightgoldenrodyellow;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* text-align: center; */\n    /* color: white; */\n}\n\n\n.grid-container-one,\n.grid-container-two{\n    display: grid;\n    width: span;\n    height: span;\n    grid-template-rows: 50px max(280px, 30vw);\n    grid-template-columns: 50px max(280px, 30vw);\n    border: 3px solid fuchsia;\n    border-radius: 15px;\n    background-color: rgba(0, 0, 0, 0.377);\n    padding: 10px;\n}\n\n.grid-container-one{\n    grid-template-areas: \n    ". x-axis"\n    "y-axis player1Grid";\n}\n\n.grid-container-two{\n    grid-template-areas: \n    ". x-axis"\n    "y-axis player2Grid";\n}\n\n.x-axis{\n    display: grid;\n    grid-area: x-axis;\n    color: white;\n    grid-auto-flow: column;\n    grid-template-columns: repeat(10, 1fr);\n}\n\n.x-axis > div {\n    /* text-align: center; */\n    font-size: 20px;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n}\n\n.y-axis{\n\n    display: grid;\n    grid-area: y-axis;\n    color: white;\n    font-size: 10px;\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.y-axis > div {\n    /* text-align: center; */\n    font-size: 20px;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n}\n\n\n.player1-grid,\n.player2-grid{\n\n    --height-and-width: max(280px, 30vw);\n    --border-size: 2px solid greenyellow;\n\n    border: var(--border-size);\n    width: var(--height-and-width);\n    height: var(--height-and-width);\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    color: white;\n\n}\n\n.player1-grid{\n    grid-area: player1Grid;\n}\n\n.player2-grid{\n    grid-area: player2Grid;\n}\n\n.player1-label,\n.player2-label{\n    color: white;\n    width: 150px;\n    border: 2px solid blanchedalmond;\n    text-align: center;\n    /* padding: 10px; */\n    font-size: 20px;\n    height: 60px;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    border-radius: 15px;\n}\n\n.show-turn{\n    background-color: greenyellow;\n}\n\n.grid-column{\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    /* border: 2px solid turquoise; */\n    text-align: center;\n}\n\n.grid-row{\n\n    border: 2px solid turquoise;\n    \n}\n.grid-row:hover{\n    /* background-color: rgba(255, 255, 0, 0.156); */\n    border: 3px solid yellow;\n}\n\n.clicked {\n    background-color: red;\n}\n\n.ship-located {\n    background-color: darkorchid;\n}\n\n\n.ship-is-hit{\n    background-color: darkred;\n}\n\n.attack-missed{\n    background-color: white;\n}\n@media (max-width: 770px){\n    /* change player font position */\n\n    .player-div{\n        grid-template-columns: 1fr;\n        grid-template-rows: repeat(2, 1fr);\n    }\n\n    .player1-div,\n    .player2-div{\n        padding: 20px 5px 20px 5px;\n    }\n\n    .player2-div {\n        grid-template-rows: 100px 1fr;\n    }\n\n\n\n    .grid-container-one,\n    .grid-container-two{\n        width: span;\n        height: span;\n        grid-template-rows: 20px 280px;\n        grid-template-columns: 20px 280px;\n        padding: 10px;\n    }\n\n    .x-axis > div,\n    .y-axis > div{\n        font-size: 12px;\n    }\n\n\n    .player1-grid,\n    .player2-grid{\n        \n        /* Might have to reduce size further */\n        width: 280px;\n        height: 280px;\n\n    }\n    .player1-div{\n        order: 2;\n    }\n    .player2-div{\n        order: 1;\n    }\n\n    .grid-container-two{\n        order: 2;\n    }\n\n    .player2-label{\n        order: 1;\n    }\n\n}'],sourceRoot:""}]);const d=o},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",i=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),i&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),i&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,i,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var d=0;d<this.length;d++){var s=this[d][0];null!=s&&(o[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);i&&o[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var a={},o=[],d=0;d<n.length;d++){var s=n[d],A=i.base?s[0]+i.base:s[0],l=a[A]||0,c="".concat(A," ").concat(l);a[A]=l+1;var p=t(c),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var g=r(u,i);i.byIndex=d,e.splice(d,0,{identifier:c,updater:g,references:1})}o.push(c)}return o}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=i(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var d=t(a[o]);e[d].references--}for(var s=i(n,r),A=0;A<a.length;A++){var l=t(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},659:n=>{var e={};n.exports=function(n,t){var i=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,r&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(i,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(i){var r=e[i];if(void 0!==r)return r.exports;var a=e[i]={id:i,exports:{}};return n[i](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),i=t(825),r=t.n(i),a=t(659),o=t.n(a),d=t(56),s=t.n(d),A=t(540),l=t.n(A),c=t(113),p=t.n(c),u=t(254),g={};function m(n){document.querySelector(".header-div").textContent=n}function C(n,e,t){const i=function(){const n=i(),e=i(),t=[];function i(){const n=[];for(let e=0;e<10;e++){const t=[];t.length=10,n[e]=t}return n}return{ownGrid:n,placeShip:function(e,i,r){const a=function(n,e,t){let i=!0;const r=[];if(n.x<0||n.y<0||n.x>9||n.y>9)return i=!1,i;for(let a=0;a<t.getLength();a++){let t,o;"north"===e&&(t=n.x,o=n.y-a),"south"===e&&(t=n.x,o=n.y+a),"east"===e&&(t=n.x+a,o=n.y),"west"===e&&(t=n.x-a,o=n.y),(t<0||o<0||t>9||o>9)&&(i=!1),r.push([t,o])}return{validity:i,potentialCoordinates:r}}(e,i,r),o=a.potentialCoordinates;let d=a.validity,s="Placement_success";return d=function(n,e,t){if(!n)return n;for(let i=0;i<e.length;i++){const r=e[i];if(t[r[0]][r[1]]){n=!1;break}}return n}(d,o,n),d?(o.forEach((e=>{n[e[0]][e[1]]=r})),t.push(r),s):(s="Placement_failed",s)},receiveAttack:function(t,i){return"Miss"===e[t][i]?"Already Miss":n[t][i]?"Hit"===e[t][i]?"Already Hit":(n[t][i].hit(),e[t][i]="Hit","Hit"):(e[t][i]="Miss","Miss")},allSunk:function(){let n=!0;for(let e=0;e<t.length;e++)if(!t[e].isSunk()){n=!1;break}return n},hitMap:e}}();return"real"!==n&&"computer"!==n?"Invalid_input":{type:n,board:i}}function h(n){let e=0,t=!1;return{getLength:function(){return n},getHits:function(){return e},isSunk:function(){return e>=n&&(t=!0),t},hit:function(){e++}}}g.styleTagTransform=p(),g.setAttributes=s(),g.insert=o().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=l(),e()(u.A,g),u.A&&u.A.locals&&u.A.locals;let y,f,I="computer";function x(n){I=n}function B(){y&&(y.deleteGrids(),y=null),f&&(f.deleteGrids(),f=null);const n=C("real"),e=C(I),t=h(5),i=h(4),r=h(3),a=h(3),o=h(2),d=[h(5),h(4),h(3),h(3),h(2)];function s(n,e){e.forEach((e=>{const t=n.board.placeShip({x:Math.floor(10*Math.random()),y:Math.floor(10*Math.random())},function(){const n=Math.floor(4*Math.random());if(n>3||n<0)throw"Choose Random Direction is not working correctly";return["north","south","east","west"][n]}(),e);if("Placement_failed"===t)return s(n,[e]);"Placement_success"!==t||console.log("All ships successfully placed")}))}s(n,[t,i,r,a,o]),s(e,d),y=function(n){const e=document.querySelector(".player1-grid");return{displayGrids:function(){E(n,e,"player1")},deleteGrids:function(){for(;e.firstChild;)e.firstChild.remove()},showShips:function(){k(0,n,e)},showHitMap:function(){Y(n,e)},player1:n}}(n),f=function(n){const e=document.querySelector(".player2-grid");return{displayGrids:function(){E(n,e,"player2")},deleteGrids:function(){for(;e.firstChild;)e.firstChild.remove()},showShips:function(){k(0,n,e)},showHitMap:function(){Y(n,e)},player2:n}}(e),y.displayGrids(),y.showShips(),f.displayGrids(),f.showHitMap()}const v=function(){let n="player1";function e(){const n=document.querySelector(".pass-device-message"),e=document.querySelector(".pass-device-button"),t=y.player1.board.allSunk();console.log(t);const i=f.player2.board.allSunk();return console.log(i),t?(n.textContent="Player 2 wins!",e.textContent="See board",m("Player 2 wins!"),!0):i?(n.textContent="Player 1 wins!",e.textContent="See board",m("Player 1 wins!"),!0):void 0}return{updateTurn:function(){return e()?(document.querySelector(".pass-device").classList.add("show-pass-device"),document.querySelector(".game-over").classList.add("enable-game-over"),y.deleteGrids(),y.displayGrids(),y.showShips(),y.showHitMap(),f.deleteGrids(),f.displayGrids(),f.showShips(),void f.showHitMap()):"player1"===n?(n="player2",y.deleteGrids(),y.displayGrids(),y.showHitMap(),f.deleteGrids(),f.displayGrids(),f.showShips(),f.showHitMap(),void("computer"===f.player2.type&&b(y.player1))):"player2"===n?(n="player1",f.deleteGrids(),f.displayGrids(),f.showHitMap(),y.deleteGrids(),y.displayGrids(),y.showShips(),y.showHitMap(),void("computer"===y.player1.type&&b(f.player2))):void 0},getTurn:function(){return n},isGameOver:e,resetTurn:function(){n="player1"}}}();let w=0;function b(n){console.log("Computer attacks");const e=Math.floor(10*Math.random()),t=Math.floor(10*Math.random()),i=n.board.receiveAttack(e,t);if("Already Hit"===i||"Already Miss"==i)return b(n);m(`Computer chose ${["A","B","C","D","E","F","G","H","I","J"][e]}${[10,9,8,7,6,5,4,3,2,1][t]} and it's a ${i.toLowerCase()}`),v.updateTurn(),w++,console.log("Computer attacks:"+w)}function E(n,e,t){for(let i=0;i<n.board.ownGrid.length;i++){n.board.ownGrid[i];const r=document.createElement("div");r.classList.add("grid-column"),e.append(r);for(let e=9;e>=0;e--){const a=document.createElement("div");a.classList.add("grid-row"),r.append(a),L(n,a,i,e,t)}}}function k(n,e,t){{const n=t.childNodes;for(let t=0;t<e.board.ownGrid.length;t++){const i=e.board.ownGrid[t];let r=0;const a=n[t].childNodes;for(let n=9;n>=0;n--)i[n]&&a[r].classList.add("ship-located"),r++}}}function Y(n,e){{const t=e.childNodes;for(let e=0;e<n.board.hitMap.length;e++){const i=n.board.hitMap[e];let r=0;const a=t[e].childNodes;for(let n=9;n>=0;n--){const e=i[n];"Hit"===e&&a[r].classList.add("ship-is-hit"),"Miss"===e&&a[r].classList.add("attack-missed"),r++}}}}function L(n,e,t,i,r){e.addEventListener("click",(function(){const a=document.querySelector(".pass-device"),o=document.querySelector(".pass-device-message"),d=document.querySelector(".player1-label"),s=document.querySelector(".player2-label"),A=v.getTurn();if(r===A)return void m("Not your own board!");const l=t,c=i;if(console.log(l,c),console.log(n.board.hitMap[l][c]),"Miss"===n.board.hitMap[l][c]||"Hit"===n.board.hitMap[l][c])return void m("Grid already chosen");const p=n.board.receiveAttack(l,c),u=["A","B","C","D","E","F","G","H","I","J"],g=[10,9,8,7,6,5,4,3,2,1];if("player1"===A&&(o.textContent=`It's a ${p.toUpperCase()}! \r\n Pass the device to Player 2`,"real"===n.type&&(d.classList.remove("show-turn"),s.classList.add("show-turn")),m(`Player 1 chose ${u[l]}${g[c]} and it's a ${p.toUpperCase()}`)),"player2"===A&&(o.textContent=`It's a ${p.toUpperCase()}! \r\n Pass the device to Player 1`,"real"===n.type&&(d.classList.add("show-turn"),s.classList.remove("show-turn")),m(`Player 2 chose ${u[l]}${g[c]} and it's a ${p.toUpperCase()}`)),"real"===n.type&&a.classList.add("show-pass-device"),v.updateTurn(),n.board.ownGrid[l][c])return e.classList.add("ship-is-hit"),void console.log(n.board.ownGrid[l][c].getHits());e.classList.add("attack-missed")}))}!function(){const n=document.querySelector("body"),e=document.createElement("div");e.classList.add("start-menu"),e.classList.add("show-start-menu"),n.append(e);const t=document.createElement("div");t.classList.add("player-title-div"),e.append(t);const i=document.createElement("div");i.textContent="BATTLESHIP",i.classList.add("game-title"),t.append(i);const r=document.createElement("div");r.classList.add("player-type-title"),r.textContent="Play against: Computer",t.append(r);const a=document.createElement("div");a.classList.add("player-type-div"),e.append(a);const o=document.createElement("button");o.classList.add("computer-option"),o.textContent="Computer",a.append(o);const d=document.createElement("button");d.classList.add("real-player-option"),d.textContent="Your friend",a.append(d);const s=document.createElement("div");s.classList.add("start-button-div"),e.append(s);const A=document.createElement("button");A.textContent="START!",A.classList.add("start-button"),s.append(A);const l=document.createElement("div");l.classList.add("pass-device"),n.append(l);const c=document.createElement("div");c.classList.add("pass-device-message"),l.append(c);const p=document.createElement("button");p.classList.add("pass-device-button"),p.textContent="Start turn",l.append(p),p.addEventListener("click",(function(n){n.preventDefault(),l.classList.remove("show-pass-device")}));const u=document.createElement("div");u.classList.add("main-container"),n.append(u);const g=document.createElement("div");g.classList.add("top-div"),u.append(g);const m=document.createElement("div");m.classList.add("header-div"),m.textContent="Player 1 goes first",g.append(m);const C=document.createElement("button");C.classList.add("restart-button"),C.textContent="RESTART",g.append(C);const h=document.createElement("div");h.classList.add("player-div"),u.append(h);const y=document.createElement("div");y.classList.add("game-over"),h.append(y);const f=document.createElement("div");f.classList.add("footer-div"),u.append(f);const I=document.createElement("a");I.classList.add("footer-link"),I.setAttribute("href","https://github.com/Risshiganesh/battleship"),I.textContent="Made by Risshiganesh Villalan",f.append(I);const x=document.createElement("div");x.classList.add("x-axis");const B=document.createElement("div");B.classList.add("x-axis"),["A","B","C","D","E","F","G","H","I","J"].forEach((n=>{const e=document.createElement("div"),t=document.createElement("div");e.textContent=n,t.textContent=n,x.append(e),B.append(t)}));const v=document.createElement("div");v.classList.add("y-axis");const w=document.createElement("div");w.classList.add("y-axis"),["1","2","3","4","5","6","7","8","9","10"].forEach((n=>{const e=document.createElement("div"),t=document.createElement("div");e.textContent=n,t.textContent=n,v.append(e),w.append(t)}));const b=document.createElement("div");b.classList.add("player1-div"),h.append(b);const E=document.createElement("div");E.classList.add("grid-container-one"),b.append(E),E.append(x),E.append(v);const k=document.createElement("div");k.classList.add("player1-grid"),E.append(k);const Y=document.createElement("div");Y.classList.add("player1-label"),Y.classList.add("show-turn"),Y.textContent="Player 1",b.append(Y);const L=document.createElement("div");L.classList.add("player2-div"),h.append(L);const q=document.createElement("div");q.classList.add("grid-container-two"),L.append(q),q.append(B),q.append(w);const S=document.createElement("div");S.classList.add("player2-grid"),q.append(S);const G=document.createElement("div");G.classList.add("player2-label"),G.textContent="Player 2",L.append(G)}(),function(){const n=document.querySelector(".start-menu"),e=document.querySelector(".player-type-title"),t=document.querySelector(".start-button"),i=document.querySelector(".computer-option"),r=document.querySelector(".real-player-option"),a=document.querySelector(".restart-button"),o=document.querySelector(".player1-label"),d=document.querySelector(".player2-label");t.addEventListener("click",(function(e){e.preventDefault(),n.classList.remove("show-start-menu"),B()})),i.addEventListener("click",(function(n){n.preventDefault(),e.textContent="Play against: Computer",x("computer")})),r.addEventListener("click",(function(n){n.preventDefault(),e.textContent="Play against: Your Friend",x("real")})),a.addEventListener("click",(function(n){n.preventDefault(),v.resetTurn(),document.querySelector(".game-over").classList.remove("enable-game-over"),m("Player 1 goes first"),o.classList.add("show-turn"),d.classList.remove("show-turn"),B()}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,