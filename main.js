(()=>{"use strict";var n={254:(n,e,t)=>{t.d(e,{A:()=>A});var r=t(354),i=t.n(r),a=t(314),o=t.n(a)()(i());o.push([n.id,'*{\n margin: 0;\n padding: 0;\n box-sizing: border-box;\n}\n\nhtml,\nbody{\n    height: 100%;\n    width: 100%;\n    background-color: black;\n    position: relative;\n    font-family: Arial, Helvetica, sans-serif;\n    \n}\n\n.game-title {\n    font-size: 40px;\n    /* font-family: Arial, Helvetica, sans-serif; */\n    font-weight: 900;\n    color: white;\n}\n\n.start-menu {\n    \n    \n    \n    display: none\n\n\n}\n\n\n\n.show-start-menu {\n\n    display: grid;\n    grid-template-rows: 300px 80px 200px;position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    z-index: 2;\n\n\n    \n}\n\n.player-title-div {\n    display: grid;\n    align-items: end;\n    justify-items: center;\n}\n\n.player-type-title{\n    color: white;\n    text-align: center;\n    font-size: 25px;\n    font-weight: 900;\n    /* vertical-align: middle; */\n}\n.player-type-div {\n    display: grid;\n\n    grid-template-columns: 1fr 1fr;\n    justify-items: center;\n    align-items: end;\n    gap: 30px;\n}\n\n.player-type-div > button {\n    width: 130px;\n    height: 50px;\n    border-radius: 15px;\n    font-size: 17px;\n}\n\n.computer-option {\n    justify-self: end;\n    background-color: cyan;\n    border: 3px solid darkslateblue;\n    color: rgb(33, 28, 62);\n}\n\n.real-player-option {\n    justify-self: start;\n    background-color: yellow;\n    border: 3px solid darkgoldenrod;\n    color: rgb(104, 57, 0);\n}\n\n.start-button-div {\n    display: grid;\n    justify-items: center;\n    align-items: center;\n}\n\n.start-button {\n    width: 290px;\n    height: 50px;\n    border-radius: 15px;\n    background-color: greenyellow;\n    border: 3px solid darkgreen;\n    color: rgb(0, 49, 0);\n    font-weight: bold;\n    font-size: 17px;\n}\n\n\n.pass-device{\n    /* border: 3px solid pink; */\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    \n    padding: 20%;\n    z-index: 2;\n    \n    display: none;\n}\n\n.show-pass-device{\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* grid-template-rows: 170px 200px; */\n    gap: 20px;\n}\n\n\n.pass-device-message {\n    border: 1px solid red;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    color: white;\n    border-radius: 15px;\n\n\n    text-align: center;\n    vertical-align: middle;\n    padding: 50px;\n    font-size: 30px;\n    /* font-family: Arial, Helvetica, sans-serif; */\n    /* line-height: 100%; */\n}\n\n.pass-device-button {\n    border: 3px solid darkgreen;\n    width: 200px;\n    height: 70px;\n    font-size: 25px;\n    border-radius: 15px;\n    align-self: start;\n    background-color: greenyellow;\n    color: black;\n}\n\n.main-container {\n\n    /* Have a minimum height and width for .player-div */\n\n    width: 100%;\n    height: 100%;\n    /* border: 2px solid red; */\n    display: grid;\n    grid-template-rows: 120px 1fr 50px;\n}\n\n.top-div {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    justify-items: center;\n    align-items: center;\n}\n\n.header-div {\n    align-self: start;\n    width: 80%;\n\n    border: 3px solid darkblue;\n    background-color: rgba(0, 0, 155, 0.501);\n    border-top: none;\n    border-radius: 0px 0px 15px 15px;\n    color: lightblue;\n    text-align: center;\n    font-size: 20px;\n    font-weight: 900;\n    height: 50px;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n\n    /* padding: 30px; */\n}\n\n.restart-button {\n    width: 130px;\n    height: 40px;\n    border-radius: 10px;\n    background-color: magenta;\n    border: 3px solid darkorchid;\n    color: rgb(47, 0, 67);\n    font-size: 15px;\n    font-weight: 900;\n}\n\n\n\n\n.player-div {\n    width: 100%;\n    height: 100%;\n    /* border: 2px solid pink; */\n    /* background-color: yellow; */\n    display: grid;\n    /* grid-template-columns: repeat(auto-fit, minmax(380px, 1fr)); */\n    grid-template-columns: repeat(2,1fr);\n    position: relative;;\n\n}\n\n.game-over{\n    position: fixed;\n    display: none;\n}\n\n.enable-game-over{\n    width: 100%;\n    height: 100%;\n    display: block;\n}\n/* Do I need z-index here? - Check if the link is still clickable if z-index is 0 after game is over */\n.footer-div {\n    width: 100%;\n    height: 100%;\n    border: 3px solid green;\n    z-index: 1; \n    color: white;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    border-radius: 15px 15px 0px 0px;\n    border-bottom: none;\n}\n\n.footer-link:link{\n    color: white;\n}\n\n.footer-link:visited{\n    color: grey;\n}\n\n.footer-link:hover{\n    color: white;\n}\n\n.player1-div,\n.player2-div{\n\n    gap: 15px;\n    display: grid;\n    padding: 10px;\n    grid-template-rows: 1fr 100px;\n\n}\n\n\n.player1-div {\n    width: 100%;\n    height: 100%;\n    /* border: 2px solid lightgreen; */\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* text-align: center; */\n    /* color: white; */\n}\n\n.player2-div {\n    width: 100%;\n    height: 100%;\n    /* border: 2px solid lightgoldenrodyellow; */\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* text-align: center; */\n    /* color: white; */\n}\n\n\n.grid-container-one,\n.grid-container-two{\n    display: grid;\n    width: span;\n    height: span;\n    grid-template-rows: 50px max(280px, 30vw);\n    grid-template-columns: 50px max(280px, 30vw);\n    border: 3px solid fuchsia;\n    border-radius: 15px;\n    background-color: rgba(0, 0, 0, 0.377);\n    padding: 10px;\n}\n\n.grid-container-one{\n    grid-template-areas: \n    ". x-axis"\n    "y-axis player1Grid";\n}\n\n.grid-container-two{\n    grid-template-areas: \n    ". x-axis"\n    "y-axis player2Grid";\n}\n\n.x-axis{\n    display: grid;\n    grid-area: x-axis;\n    color: white;\n    grid-auto-flow: column;\n    grid-template-columns: repeat(10, 1fr);\n}\n\n.x-axis > div {\n    /* text-align: center; */\n    font-size: 20px;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n}\n\n.y-axis{\n\n    display: grid;\n    grid-area: y-axis;\n    color: white;\n    font-size: 10px;\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.y-axis > div {\n    /* text-align: center; */\n    font-size: 20px;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n}\n\n\n.player1-grid,\n.player2-grid{\n\n    --height-and-width: max(280px, 30vw);\n    --border-size: 1px solid turquoise;\n\n    border: var(--border-size);\n    width: var(--height-and-width);\n    height: var(--height-and-width);\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    color: white;\n\n}\n\n.player1-grid{\n    grid-area: player1Grid;\n}\n\n.player2-grid{\n    grid-area: player2Grid;\n}\n\n.player1-label,\n.player2-label{\n    color: white;\n    width: 150px;\n    border: 2px solid blanchedalmond;\n    text-align: center;\n    /* padding: 10px; */\n    font-size: 20px;\n    height: 60px;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    border-radius: 15px;\n    font-weight: bold;\n}\n\n.show-turn{\n    background-color: greenyellow;\n    color: black;\n    border: 3px solid darkgreen;\n}\n\n.grid-column{\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    /* border: 2px solid turquoise; */\n    text-align: center;\n}\n\n.grid-row{\n\n    border: 1px solid turquoise;\n    \n}\n.grid-row:hover{\n    /* background-color: rgba(255, 255, 0, 0.156); */\n    border: 3px solid yellow;\n}\n\n.clicked {\n    background-color: red;\n}\n\n.ship-located {\n    background-color: darkorchid;\n}\n\n\n.ship-is-hit{\n    background-color: darkred;\n}\n\n.attack-missed{\n    background-color: white;\n}\n@media (max-width: 770px){\n    /* change player font position */\n\n    .player-div{\n        grid-template-columns: 1fr;\n        grid-template-rows: repeat(2, 1fr);\n    }\n\n    .player1-div,\n    .player2-div{\n        padding: 20px 5px 20px 5px;\n    }\n\n    .player2-div {\n        grid-template-rows: 100px 1fr;\n    }\n\n\n\n    .grid-container-one,\n    .grid-container-two{\n        width: span;\n        height: span;\n        grid-template-rows: 20px 280px;\n        grid-template-columns: 20px 280px;\n        padding: 10px;\n    }\n\n    .x-axis > div,\n    .y-axis > div{\n        font-size: 12px;\n    }\n\n\n    .player1-grid,\n    .player2-grid{\n        \n        /* Might have to reduce size further */\n        width: 280px;\n        height: 280px;\n\n    }\n    .player1-div{\n        order: 2;\n    }\n    .player2-div{\n        order: 1;\n    }\n\n    .grid-container-two{\n        order: 2;\n    }\n\n    .player2-label{\n        order: 1;\n    }\n\n}',"",{version:3,sources:["webpack://./src/assets/style.css"],names:[],mappings:"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",sourcesContent:['*{\n margin: 0;\n padding: 0;\n box-sizing: border-box;\n}\n\nhtml,\nbody{\n    height: 100%;\n    width: 100%;\n    background-color: black;\n    position: relative;\n    font-family: Arial, Helvetica, sans-serif;\n    \n}\n\n.game-title {\n    font-size: 40px;\n    /* font-family: Arial, Helvetica, sans-serif; */\n    font-weight: 900;\n    color: white;\n}\n\n.start-menu {\n    \n    \n    \n    display: none\n\n\n}\n\n\n\n.show-start-menu {\n\n    display: grid;\n    grid-template-rows: 300px 80px 200px;position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    z-index: 2;\n\n\n    \n}\n\n.player-title-div {\n    display: grid;\n    align-items: end;\n    justify-items: center;\n}\n\n.player-type-title{\n    color: white;\n    text-align: center;\n    font-size: 25px;\n    font-weight: 900;\n    /* vertical-align: middle; */\n}\n.player-type-div {\n    display: grid;\n\n    grid-template-columns: 1fr 1fr;\n    justify-items: center;\n    align-items: end;\n    gap: 30px;\n}\n\n.player-type-div > button {\n    width: 130px;\n    height: 50px;\n    border-radius: 15px;\n    font-size: 17px;\n}\n\n.computer-option {\n    justify-self: end;\n    background-color: cyan;\n    border: 3px solid darkslateblue;\n    color: rgb(33, 28, 62);\n}\n\n.real-player-option {\n    justify-self: start;\n    background-color: yellow;\n    border: 3px solid darkgoldenrod;\n    color: rgb(104, 57, 0);\n}\n\n.start-button-div {\n    display: grid;\n    justify-items: center;\n    align-items: center;\n}\n\n.start-button {\n    width: 290px;\n    height: 50px;\n    border-radius: 15px;\n    background-color: greenyellow;\n    border: 3px solid darkgreen;\n    color: rgb(0, 49, 0);\n    font-weight: bold;\n    font-size: 17px;\n}\n\n\n.pass-device{\n    /* border: 3px solid pink; */\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    background-color: black;\n    \n    padding: 20%;\n    z-index: 2;\n    \n    display: none;\n}\n\n.show-pass-device{\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* grid-template-rows: 170px 200px; */\n    gap: 20px;\n}\n\n\n.pass-device-message {\n    border: 1px solid red;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    color: white;\n    border-radius: 15px;\n\n\n    text-align: center;\n    vertical-align: middle;\n    padding: 50px;\n    font-size: 30px;\n    /* font-family: Arial, Helvetica, sans-serif; */\n    /* line-height: 100%; */\n}\n\n.pass-device-button {\n    border: 3px solid darkgreen;\n    width: 200px;\n    height: 70px;\n    font-size: 25px;\n    border-radius: 15px;\n    align-self: start;\n    background-color: greenyellow;\n    color: black;\n}\n\n.main-container {\n\n    /* Have a minimum height and width for .player-div */\n\n    width: 100%;\n    height: 100%;\n    /* border: 2px solid red; */\n    display: grid;\n    grid-template-rows: 120px 1fr 50px;\n}\n\n.top-div {\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    justify-items: center;\n    align-items: center;\n}\n\n.header-div {\n    align-self: start;\n    width: 80%;\n\n    border: 3px solid darkblue;\n    background-color: rgba(0, 0, 155, 0.501);\n    border-top: none;\n    border-radius: 0px 0px 15px 15px;\n    color: lightblue;\n    text-align: center;\n    font-size: 20px;\n    font-weight: 900;\n    height: 50px;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n\n    /* padding: 30px; */\n}\n\n.restart-button {\n    width: 130px;\n    height: 40px;\n    border-radius: 10px;\n    background-color: magenta;\n    border: 3px solid darkorchid;\n    color: rgb(47, 0, 67);\n    font-size: 15px;\n    font-weight: 900;\n}\n\n\n\n\n.player-div {\n    width: 100%;\n    height: 100%;\n    /* border: 2px solid pink; */\n    /* background-color: yellow; */\n    display: grid;\n    /* grid-template-columns: repeat(auto-fit, minmax(380px, 1fr)); */\n    grid-template-columns: repeat(2,1fr);\n    position: relative;;\n\n}\n\n.game-over{\n    position: fixed;\n    display: none;\n}\n\n.enable-game-over{\n    width: 100%;\n    height: 100%;\n    display: block;\n}\n/* Do I need z-index here? - Check if the link is still clickable if z-index is 0 after game is over */\n.footer-div {\n    width: 100%;\n    height: 100%;\n    border: 3px solid green;\n    z-index: 1; \n    color: white;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    border-radius: 15px 15px 0px 0px;\n    border-bottom: none;\n}\n\n.footer-link:link{\n    color: white;\n}\n\n.footer-link:visited{\n    color: grey;\n}\n\n.footer-link:hover{\n    color: white;\n}\n\n.player1-div,\n.player2-div{\n\n    gap: 15px;\n    display: grid;\n    padding: 10px;\n    grid-template-rows: 1fr 100px;\n\n}\n\n\n.player1-div {\n    width: 100%;\n    height: 100%;\n    /* border: 2px solid lightgreen; */\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* text-align: center; */\n    /* color: white; */\n}\n\n.player2-div {\n    width: 100%;\n    height: 100%;\n    /* border: 2px solid lightgoldenrodyellow; */\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    /* text-align: center; */\n    /* color: white; */\n}\n\n\n.grid-container-one,\n.grid-container-two{\n    display: grid;\n    width: span;\n    height: span;\n    grid-template-rows: 50px max(280px, 30vw);\n    grid-template-columns: 50px max(280px, 30vw);\n    border: 3px solid fuchsia;\n    border-radius: 15px;\n    background-color: rgba(0, 0, 0, 0.377);\n    padding: 10px;\n}\n\n.grid-container-one{\n    grid-template-areas: \n    ". x-axis"\n    "y-axis player1Grid";\n}\n\n.grid-container-two{\n    grid-template-areas: \n    ". x-axis"\n    "y-axis player2Grid";\n}\n\n.x-axis{\n    display: grid;\n    grid-area: x-axis;\n    color: white;\n    grid-auto-flow: column;\n    grid-template-columns: repeat(10, 1fr);\n}\n\n.x-axis > div {\n    /* text-align: center; */\n    font-size: 20px;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n}\n\n.y-axis{\n\n    display: grid;\n    grid-area: y-axis;\n    color: white;\n    font-size: 10px;\n    grid-template-rows: repeat(10, 1fr);\n}\n\n.y-axis > div {\n    /* text-align: center; */\n    font-size: 20px;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n}\n\n\n.player1-grid,\n.player2-grid{\n\n    --height-and-width: max(280px, 30vw);\n    --border-size: 1px solid turquoise;\n\n    border: var(--border-size);\n    width: var(--height-and-width);\n    height: var(--height-and-width);\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    color: white;\n\n}\n\n.player1-grid{\n    grid-area: player1Grid;\n}\n\n.player2-grid{\n    grid-area: player2Grid;\n}\n\n.player1-label,\n.player2-label{\n    color: white;\n    width: 150px;\n    border: 2px solid blanchedalmond;\n    text-align: center;\n    /* padding: 10px; */\n    font-size: 20px;\n    height: 60px;\n    display: grid;\n    justify-items: center;\n    align-items: center;\n    border-radius: 15px;\n    font-weight: bold;\n}\n\n.show-turn{\n    background-color: greenyellow;\n    color: black;\n    border: 3px solid darkgreen;\n}\n\n.grid-column{\n    display: grid;\n    grid-template-rows: repeat(10, 1fr);\n    /* border: 2px solid turquoise; */\n    text-align: center;\n}\n\n.grid-row{\n\n    border: 1px solid turquoise;\n    \n}\n.grid-row:hover{\n    /* background-color: rgba(255, 255, 0, 0.156); */\n    border: 3px solid yellow;\n}\n\n.clicked {\n    background-color: red;\n}\n\n.ship-located {\n    background-color: darkorchid;\n}\n\n\n.ship-is-hit{\n    background-color: darkred;\n}\n\n.attack-missed{\n    background-color: white;\n}\n@media (max-width: 770px){\n    /* change player font position */\n\n    .player-div{\n        grid-template-columns: 1fr;\n        grid-template-rows: repeat(2, 1fr);\n    }\n\n    .player1-div,\n    .player2-div{\n        padding: 20px 5px 20px 5px;\n    }\n\n    .player2-div {\n        grid-template-rows: 100px 1fr;\n    }\n\n\n\n    .grid-container-one,\n    .grid-container-two{\n        width: span;\n        height: span;\n        grid-template-rows: 20px 280px;\n        grid-template-columns: 20px 280px;\n        padding: 10px;\n    }\n\n    .x-axis > div,\n    .y-axis > div{\n        font-size: 12px;\n    }\n\n\n    .player1-grid,\n    .player2-grid{\n        \n        /* Might have to reduce size further */\n        width: 280px;\n        height: 280px;\n\n    }\n    .player1-div{\n        order: 2;\n    }\n    .player2-div{\n        order: 1;\n    }\n\n    .grid-container-two{\n        order: 2;\n    }\n\n    .player2-label{\n        order: 1;\n    }\n\n}'],sourceRoot:""}]);const A=o},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var A=0;A<this.length;A++){var d=this[A][0];null!=d&&(o[d]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);r&&o[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},o=[],A=0;A<n.length;A++){var d=n[A],s=r.base?d[0]+r.base:d[0],l=a[s]||0,c="".concat(s," ").concat(l);a[s]=l+1;var p=t(c),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var g=i(u,r);r.byIndex=A,e.splice(A,0,{identifier:c,updater:g,references:1})}o.push(c)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var a=r(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var A=t(a[o]);e[A].references--}for(var d=r(n,i),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(72),e=t.n(n),r=t(825),i=t.n(r),a=t(659),o=t.n(a),A=t(56),d=t.n(A),s=t(540),l=t.n(s),c=t(113),p=t.n(c),u=t(254),g={};function C(n){document.querySelector(".header-div").textContent=n}function m(n,e,t){const r=function(){const n=r(),e=r(),t=[];function r(){const n=[];for(let e=0;e<10;e++){const t=[];t.length=10,n[e]=t}return n}return{ownGrid:n,placeShip:function(e,r,i){const a=function(n,e,t){let r=!0;const i=[];if(n.x<0||n.y<0||n.x>9||n.y>9)return r=!1,r;for(let a=0;a<t.getLength();a++){let t,o;"north"===e&&(t=n.x,o=n.y-a),"south"===e&&(t=n.x,o=n.y+a),"east"===e&&(t=n.x+a,o=n.y),"west"===e&&(t=n.x-a,o=n.y),(t<0||o<0||t>9||o>9)&&(r=!1),i.push([t,o])}return{validity:r,potentialCoordinates:i}}(e,r,i),o=a.potentialCoordinates;let A=a.validity,d="Placement_success";return A=function(n,e,t){if(!n)return n;for(let r=0;r<e.length;r++){const i=e[r];if(t[i[0]][i[1]]){n=!1;break}}return n}(A,o,n),A?(o.forEach((e=>{n[e[0]][e[1]]=i})),t.push(i),d):(d="Placement_failed",d)},receiveAttack:function(t,r){return"Miss"===e[t][r]?"Already Miss":n[t][r]?"Hit"===e[t][r]?"Already Hit":(n[t][r].hit(),e[t][r]="Hit","Hit"):(e[t][r]="Miss","Miss")},allSunk:function(){let n=!0;for(let e=0;e<t.length;e++)if(!t[e].isSunk()){n=!1;break}return n},hitMap:e}}();return"real"!==n&&"computer"!==n?"Invalid_input":{type:n,board:r}}function h(n){let e=0,t=!1;return{getLength:function(){return n},getHits:function(){return e},isSunk:function(){return e>=n&&(t=!0),t},hit:function(){e++}}}g.styleTagTransform=p(),g.setAttributes=d(),g.insert=o().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=l(),e()(u.A,g),u.A&&u.A.locals&&u.A.locals;let B,y,x="computer";const I=function(){let n="player1";function e(){const n=document.querySelector(".pass-device-message"),e=document.querySelector(".pass-device-button"),t=B.player.board.allSunk();console.log(t);const r=y.player.board.allSunk();return console.log(r),t?(n.textContent="Player 2 wins!",e.textContent="See board",C("Player 2 wins!"),!0):r?(n.textContent="Player 1 wins!",e.textContent="See board",C("Player 1 wins!"),!0):void 0}return{updateTurn:function(){return e()?(document.querySelector(".pass-device").classList.add("show-pass-device"),document.querySelector(".game-over").classList.add("enable-game-over"),B.deleteGrids(),B.displayGrids(),B.showShips(),B.showHitMap(),y.deleteGrids(),y.displayGrids(),y.showShips(),void y.showHitMap()):"player1"===n?(n="player2",B.deleteGrids(),B.displayGrids(),B.showHitMap(),y.deleteGrids(),y.displayGrids(),y.showShips(),y.showHitMap(),void("computer"===y.player.type&&w(B.player))):"player2"===n?(n="player1",y.deleteGrids(),y.displayGrids(),y.showHitMap(),B.deleteGrids(),B.displayGrids(),B.showShips(),B.showHitMap(),void("computer"===B.player.type&&w(y.player))):void 0},getTurn:function(){return n},isGameOver:e,resetTurn:function(){n="player1"}}}();function f(n){x=n}function b(){B&&(B.deleteGrids(),B=null),y&&(y.deleteGrids(),y=null);const n=m("real"),e=m(x),t=h(5),r=h(4),i=h(3),a=h(3),o=h(2),A=h(5),d=h(4),s=h(3),l=h(3),c=h(2);console.log(n.board.placeShip({x:9,y:9},"north",t)),n.board.placeShip({x:0,y:0},"east",r),n.board.placeShip({x:5,y:5},"east",i),n.board.placeShip({x:2,y:2},"east",a),n.board.placeShip({x:9,y:0},"south",o),console.log(e.board.placeShip({x:9,y:9},"north",A)),e.board.placeShip({x:0,y:0},"east",d),e.board.placeShip({x:5,y:5},"east",s),e.board.placeShip({x:2,y:2},"east",l),e.board.placeShip({x:9,y:0},"south",c),B=k(n,"player1"),y=k(e,"player2"),console.log(y),B.displayGrids(),B.showShips(),y.displayGrids(),y.showHitMap()}let v=0;function w(n){console.log("Computer attacks");const e=Math.floor(10*Math.random()),t=Math.floor(10*Math.random()),r=n.board.receiveAttack(e,t);if("Already Hit"===r||"Already Miss"==r)return w(n);C(`Computer chose ${["A","B","C","D","E","F","G","H","I","J"][e]}${[10,9,8,7,6,5,4,3,2,1][t]} and it's a ${r.toLowerCase()}`),I.updateTurn(),v++,console.log("Computer attacks:"+v)}function k(n,e){let t;return console.log(n),"player1"===e&&(t=document.querySelector(".player1-grid")),"player2"===e&&(console.log("TEST"),t=document.querySelector(".player2-grid")),{displayGrids:function(){!function(n,e,t){for(let r=0;r<n.board.ownGrid.length;r++){n.board.ownGrid[r];const i=document.createElement("div");i.classList.add("grid-column"),e.append(i);for(let e=9;e>=0;e--){const a=document.createElement("div");a.classList.add("grid-row"),i.append(a),E(n,a,r,e,t)}}}(n,t,e)},deleteGrids:function(){for(;t.firstChild;)t.firstChild.remove()},showShips:function(){!function(n,e,t){{const n=t.childNodes;for(let t=0;t<e.board.ownGrid.length;t++){const r=e.board.ownGrid[t];let i=0;const a=n[t].childNodes;for(let n=9;n>=0;n--)r[n]&&a[i].classList.add("ship-located"),i++}}}(0,n,t)},showHitMap:function(){!function(n,e){{const t=e.childNodes;for(let e=0;e<n.board.hitMap.length;e++){const r=n.board.hitMap[e];let i=0;const a=t[e].childNodes;for(let n=9;n>=0;n--){const e=r[n];"Hit"===e&&a[i].classList.add("ship-is-hit"),"Miss"===e&&a[i].classList.add("attack-missed"),i++}}}}(n,t)},player:n}}function E(n,e,t,r,i){e.addEventListener("click",(function(){const a=document.querySelector(".pass-device"),o=document.querySelector(".pass-device-message"),A=document.querySelector(".player1-label"),d=document.querySelector(".player2-label"),s=I.getTurn();if(i===s)return void C("Not your own board!");const l=t,c=r;if(console.log(l,c),console.log(n.board.hitMap[l][c]),"Miss"===n.board.hitMap[l][c]||"Hit"===n.board.hitMap[l][c])return void C("Grid already chosen");const p=n.board.receiveAttack(l,c),u=["A","B","C","D","E","F","G","H","I","J"],g=[10,9,8,7,6,5,4,3,2,1];if("player1"===s&&(o.textContent=`It's a ${p.toUpperCase()}! \r\n Pass the device to Player 2`,"real"===n.type&&(A.classList.remove("show-turn"),d.classList.add("show-turn")),C(`Player 1 chose ${u[l]}${g[c]} and it's a ${p.toUpperCase()}`)),"player2"===s&&(o.textContent=`It's a ${p.toUpperCase()}! \r\n Pass the device to Player 1`,"real"===n.type&&(A.classList.add("show-turn"),d.classList.remove("show-turn")),C(`Player 2 chose ${u[l]}${g[c]} and it's a ${p.toUpperCase()}`)),"real"===n.type&&a.classList.add("show-pass-device"),I.updateTurn(),n.board.ownGrid[l][c])return e.classList.add("ship-is-hit"),void console.log(n.board.ownGrid[l][c].getHits());e.classList.add("attack-missed")}))}!function(){const n=document.querySelector("body"),e=document.createElement("div");e.classList.add("start-menu"),e.classList.add("show-start-menu"),n.append(e);const t=document.createElement("div");t.classList.add("player-title-div"),e.append(t);const r=document.createElement("div");r.textContent="BATTLESHIP",r.classList.add("game-title"),t.append(r);const i=document.createElement("div");i.classList.add("player-type-title"),i.textContent="Play against: Computer",t.append(i);const a=document.createElement("div");a.classList.add("player-type-div"),e.append(a);const o=document.createElement("button");o.classList.add("computer-option"),o.textContent="Computer",a.append(o);const A=document.createElement("button");A.classList.add("real-player-option"),A.textContent="Your friend",a.append(A);const d=document.createElement("div");d.classList.add("start-button-div"),e.append(d);const s=document.createElement("button");s.textContent="START!",s.classList.add("start-button"),d.append(s);const l=document.createElement("div");l.classList.add("pass-device"),n.append(l);const c=document.createElement("div");c.classList.add("pass-device-message"),l.append(c);const p=document.createElement("button");p.classList.add("pass-device-button"),p.textContent="Start turn",l.append(p),p.addEventListener("click",(function(n){n.preventDefault(),l.classList.remove("show-pass-device")}));const u=document.createElement("div");u.classList.add("main-container"),n.append(u);const g=document.createElement("div");g.classList.add("top-div"),u.append(g);const C=document.createElement("div");C.classList.add("header-div"),C.textContent="Player 1 goes first",g.append(C);const m=document.createElement("button");m.classList.add("restart-button"),m.textContent="RESTART",g.append(m);const h=document.createElement("div");h.classList.add("player-div"),u.append(h);const B=document.createElement("div");B.classList.add("game-over"),h.append(B);const y=document.createElement("div");y.classList.add("footer-div"),u.append(y);const x=document.createElement("a");x.classList.add("footer-link"),x.setAttribute("href","https://github.com/Risshiganesh/battleship"),x.textContent="Made by Risshiganesh Villalan",y.append(x);const I=document.createElement("div");I.classList.add("x-axis");const f=document.createElement("div");f.classList.add("x-axis"),["A","B","C","D","E","F","G","H","I","J"].forEach((n=>{const e=document.createElement("div"),t=document.createElement("div");e.textContent=n,t.textContent=n,I.append(e),f.append(t)}));const b=document.createElement("div");b.classList.add("y-axis");const v=document.createElement("div");v.classList.add("y-axis"),["1","2","3","4","5","6","7","8","9","10"].forEach((n=>{const e=document.createElement("div"),t=document.createElement("div");e.textContent=n,t.textContent=n,b.append(e),v.append(t)}));const w=document.createElement("div");w.classList.add("player1-div"),h.append(w);const k=document.createElement("div");k.classList.add("grid-container-one"),w.append(k),k.append(I),k.append(b);const E=document.createElement("div");E.classList.add("player1-grid"),k.append(E);const Y=document.createElement("div");Y.classList.add("player1-label"),Y.classList.add("show-turn"),Y.textContent="Player 1",w.append(Y);const L=document.createElement("div");L.classList.add("player2-div"),h.append(L);const S=document.createElement("div");S.classList.add("grid-container-two"),L.append(S),S.append(f),S.append(v);const q=document.createElement("div");q.classList.add("player2-grid"),S.append(q);const j=document.createElement("div");j.classList.add("player2-label"),j.textContent="Player 2",L.append(j)}(),function(){const n=document.querySelector(".start-menu"),e=document.querySelector(".player-type-title"),t=document.querySelector(".start-button"),r=document.querySelector(".computer-option"),i=document.querySelector(".real-player-option"),a=document.querySelector(".restart-button"),o=document.querySelector(".player1-label"),A=document.querySelector(".player2-label");t.addEventListener("click",(function(e){e.preventDefault(),n.classList.remove("show-start-menu"),b()})),r.addEventListener("click",(function(n){n.preventDefault(),e.textContent="Play against: Computer",f("computer")})),i.addEventListener("click",(function(n){n.preventDefault(),e.textContent="Play against: Your Friend",f("real")})),a.addEventListener("click",(function(n){n.preventDefault(),I.resetTurn(),document.querySelector(".game-over").classList.remove("enable-game-over"),C("Player 1 goes first"),o.classList.add("show-turn"),A.classList.remove("show-turn"),b()}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,